AWSTemplateFormatVersion: '2010-09-09'
Description: 'public and private subnets in two availability zones'

Parameters:
  Project:
    Description: Project Name
    Type: String
    Default: "New-Vertical"

  ProjectMaintainer:
    Description: Maintaing team email id. 
    Type: String
    Default: 'teamemail@example.com'

  ResourcePrefix:
    Description: The prefix given to the resource. Follow the standard naming Conventation.
    Type: String
    Default: "CHALO"

  Environment:
    Description: "Please select the environment where you want to deploy this policy" 
    Type: String
    Default: "stage"
    AllowedValues:
      - "dev"
      - "stage"
      - "prod" 

Resources:

  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value:  !Join ["", [ !Ref ResourcePrefix, "-", !Ref Environment, "-VPC"]]
      - Key: UseCase
        Value: 'Network Setup'
      - Key: Maintainer
        Value: !Ref ProjectMaintainer
      - Key: Project
        Value: !Ref Project

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
      - Key: Name
        Value:  'chalo.com/new'
      - Key: UseCase
        Value: 'Network Setup'
      - Key: Maintainer
        Value: 'teamemail@example.com'
      - Key: Project
        Value: 'New-Vertical'

  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  AZASubnetPublic:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock:  '10.0.0.0/20'
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value:  !Join ["", [ !Ref ResourcePrefix, "-", !Ref Environment, "-AZ-A-Subnet-Public"]]
      - Key: UseCase
        Value: 'Network Setup'
      - Key: Maintainer
        Value: !Ref ProjectMaintainer
      - Key: Project
        Value: !Ref Project

  AZASubnetPrivate1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: '10.0.16.0/20'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value:  !Join ["", [ !Ref ResourcePrefix, "-", !Ref Environment, "-AZ-A-Subnet-Private-1"]]
      - Key: UseCase
        Value: 'Network Setup'
      - Key: Maintainer
        Value: !Ref ProjectMaintainer
      - Key: Project
        Value: !Ref Project

  AZASubnetPrivate2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: '10.0.32.0/20'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value:  !Join ["", [ !Ref ResourcePrefix, "-", !Ref Environment, "-AZ-A-Subnet-Private-2"]]
      - Key: UseCase
        Value: 'Network Setup'
      - Key: Maintainer
        Value: !Ref ProjectMaintainer
      - Key: Project
        Value: !Ref Project

  AZBSubnetPublic:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: '10.0.48.0/20'
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value:  !Join ["", [ !Ref ResourcePrefix, "-", !Ref Environment, "-AZ-B-Subnet-Public"]]
      - Key: UseCase
        Value: 'Network Setup'
      - Key: Maintainer
        Value: !Ref ProjectMaintainer
      - Key: Project
        Value: !Ref Project

  AZBSubnetPrivate1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: '10.0.64.0/20'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value:  !Join ["", [ !Ref ResourcePrefix, "-", !Ref Environment, "AZ-B-Subnet-Private-1"]]
      - Key: UseCase
        Value: 'Network Setup'
      - Key: Maintainer
        Value: !Ref ProjectMaintainer
      - Key: Project
        Value: !Ref Project

  AZBSubnetPrivate2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: '10.0.80.0/20'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value:  !Join ["", [ !Ref ResourcePrefix, "-", !Ref Environment, "AZ-B-Subnet-Private-2"]]
      - Key: UseCase
        Value: 'Network Setup'
      - Key: Maintainer
        Value: !Ref ProjectMaintainer
      - Key: Project
        Value: !Ref Project


  RouteTableAZAPublic:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value:  !Join ["", [ !Ref ResourcePrefix, "-", !Ref Environment, "RouteTable-AZ-A-Public"]]
      - Key: UseCase
        Value: 'Network Setup'
      - Key: Maintainer
        Value: !Ref ProjectMaintainer
      - Key: Project
        Value: !Ref Project

  RouteTableAZAPrivate:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value:  !Join ["", [ !Ref ResourcePrefix, "-", !Ref Environment, "-RouteTable-AZ-A-Private"]]
      - Key: UseCase
        Value: 'Network Setup'
      - Key: Maintainer
        Value: !Ref ProjectMaintainer
      - Key: Project
        Value: !Ref Project

  RouteTableAZBPublic:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value:  !Join ["", [ !Ref ResourcePrefix, "-", !Ref Environment, "RouteTable-AZ-B-Public"]]
      - Key: UseCase
        Value: 'Network Setup'
      - Key: Maintainer
        Value: !Ref ProjectMaintainer
      - Key: Project
        Value: !Ref Project

  RouteTableAZBPrivate:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value:  !Join ["", [ !Ref ResourcePrefix, "-", !Ref Environment, "RouteTable-AZ-B-Private"]]
      - Key: UseCase
        Value: 'Network Setup'
      - Key: Maintainer
        Value: !Ref ProjectMaintainer
      - Key: Project
        Value: !Ref Project

  RouteTableAssociationAZAPublic:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref AZASubnetPublic
      RouteTableId: !Ref RouteTableAZAPublic

  RouteTableAssociationAZAPrivate1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref AZASubnetPrivate1
      RouteTableId: !Ref RouteTableAZAPrivate
    
  RouteTableAssociationAZAPrivate2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref AZASubnetPrivate2
      RouteTableId: !Ref RouteTableAZAPrivate

  RouteTableAssociationAZBPublic:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref AZBSubnetPublic
      RouteTableId: !Ref RouteTableAZBPublic

  RouteTableAssociationAZBPrivate1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref AZBSubnetPrivate1
      RouteTableId: !Ref RouteTableAZBPrivate

  RouteTableAssociationAZBPrivate2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref AZBSubnetPrivate2
      RouteTableId: !Ref RouteTableAZBPrivate

  AZAPublicInternetRoute: 
    Type: 'AWS::EC2::Route'
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTableAZAPublic
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  AZBPublicInternetRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTableAZBPublic
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  NetworkAclPublic:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value:  !Join ["", [ !Ref ResourcePrefix, "-", !Ref Environment, "NetworkAclPublic"]]
      - Key: UseCase
        Value: 'Network Setup'
      - Key: Maintainer
        Value: !Ref ProjectMaintainer
      - Key: Project
        Value: !Ref Project

  NetworkAclPrivate:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value:  !Join ["", [ !Ref ResourcePrefix, "-", !Ref Environment, "NetworkAclPrivate"]]
      - Key: UseCase
        Value: 'Network Setup'
      - Key: Maintainer
        Value: !Ref ProjectMaintainer
      - Key: Project
        Value: !Ref Project

  NetworkAssociationAZAPublic:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref AZASubnetPublic
      NetworkAclId: !Ref NetworkAclPublic

  NetworkAssociationAZAPrivate1:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref AZASubnetPrivate1
      NetworkAclId: !Ref NetworkAclPrivate

  NetworkAssociationAZAPrivate2:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref AZASubnetPrivate2
      NetworkAclId: !Ref NetworkAclPrivate

  NetworkAssociationAZBPublic:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref AZBSubnetPublic
      NetworkAclId: !Ref NetworkAclPublic

  NetworkAssociationAZBPrivate1:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref AZBSubnetPrivate1
      NetworkAclId: !Ref NetworkAclPrivate

  NetworkAssociationAZBPrivate2:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref AZBSubnetPrivate2
      NetworkAclId: !Ref NetworkAclPrivate

  NetworkAclEntryInPublicAllowAll:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAclPublic
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: '0.0.0.0/0'

  NetworkAclEntryOutPublicAllowAll:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAclPublic
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: '0.0.0.0/0'


  NetworkAclEntryInPrivateAllowVPC:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAclPrivate
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: '0.0.0.0/0'

  NetworkAclEntryOutPrivateAllowVPC:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAclPrivate
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: '0.0.0.0/0'
      
